openapi: 3.0.3
info:
  title: Tenant Registry Admin API
  version: 1.0.0
  description: |
    Admin API for tenant provisioning and management.
    Requires super_admin role in JWT token.

servers:
  - url: https://api.taskifai.com/api
    description: Production API
  - url: http://localhost:8000/api
    description: Development API

paths:
  /admin/tenants:
    post:
      summary: Create new tenant
      description: |
        Register new customer tenant in the registry.
        Requires manual Supabase project creation first (MVP).
        Super admin only.
      operationId: createTenant
      tags:
        - Tenant Admin
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTenantRequest'
            example:
              subdomain: customer1
              company_name: Customer Company Inc
              admin_email: admin@customer1.com
              database_url: https://xxx.supabase.co
              database_credentials:
                anon_key: eyJxxx...
                service_key: eyJxxx...
      responses:
        '201':
          description: Tenant created successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
              example:
                tenant_id: 550e8400-e29b-41d4-a716-446655440000
                company_name: Customer Company Inc
                subdomain: customer1
                is_active: true
                created_at: '2025-10-09T12:00:00Z'
        '400':
          description: Invalid request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '403':
          description: Forbidden - super admin required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                detail: Super admin access required
        '409':
          description: Subdomain already exists
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
              example:
                detail: Subdomain 'customer1' already exists

    get:
      summary: List all tenants
      description: |
        Retrieve list of all tenants in the registry.
        Super admin only.
      operationId: listTenants
      tags:
        - Tenant Admin
      security:
        - BearerAuth: []
      parameters:
        - name: is_active
          in: query
          description: Filter by active status
          schema:
            type: boolean
        - name: limit
          in: query
          description: Number of results to return
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
        - name: offset
          in: query
          description: Number of results to skip
          schema:
            type: integer
            minimum: 0
            default: 0
      responses:
        '200':
          description: List of tenants
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantListResponse'
              example:
                tenants:
                  - tenant_id: demo-tenant-id
                    company_name: TaskifAI Demo
                    subdomain: demo
                    is_active: true
                    created_at: '2025-10-01T00:00:00Z'
                  - tenant_id: 550e8400-e29b-41d4-a716-446655440000
                    company_name: Customer Company Inc
                    subdomain: customer1
                    is_active: true
                    created_at: '2025-10-09T12:00:00Z'
                total: 2
                limit: 20
                offset: 0
        '403':
          description: Forbidden - super admin required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/tenants/{tenant_id}:
    get:
      summary: Get tenant details
      description: |
        Retrieve detailed information for specific tenant.
        Super admin only. Credentials are not returned.
      operationId: getTenant
      tags:
        - Tenant Admin
      security:
        - BearerAuth: []
      parameters:
        - name: tenant_id
          in: path
          required: true
          description: Tenant UUID
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: Tenant details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantDetailResponse'
        '403':
          description: Forbidden - super admin required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

    patch:
      summary: Update tenant
      description: |
        Update tenant properties. Cannot update credentials via this endpoint.
        Super admin only.
      operationId: updateTenant
      tags:
        - Tenant Admin
      security:
        - BearerAuth: []
      parameters:
        - name: tenant_id
          in: path
          required: true
          description: Tenant UUID
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTenantRequest'
            example:
              is_active: false
      responses:
        '200':
          description: Tenant updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantResponse'
        '403':
          description: Forbidden - super admin required
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: Tenant not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

  /admin/tenants/{tenant_id}/users:
    get:
      summary: List tenant users
      description: |
        Get all user-tenant mappings for specific tenant.
        Super admin only.
      operationId: listTenantUsers
      tags:
        - Tenant Admin
      security:
        - BearerAuth: []
      parameters:
        - name: tenant_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: List of tenant users
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TenantUsersResponse'

    post:
      summary: Add user to tenant
      description: |
        Create user-tenant mapping.
        Super admin only.
      operationId: addTenantUser
      tags:
        - Tenant Admin
      security:
        - BearerAuth: []
      parameters:
        - name: tenant_id
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddTenantUserRequest'
            example:
              email: user@customer1.com
              role: admin
      responses:
        '201':
          description: User added to tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserTenantResponse'
        '409':
          description: User already exists in tenant
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'

components:
  schemas:
    CreateTenantRequest:
      type: object
      required:
        - subdomain
        - company_name
        - admin_email
        - database_url
        - database_credentials
      properties:
        subdomain:
          type: string
          pattern: '^[a-z0-9-]+$'
          minLength: 2
          maxLength: 50
          description: Unique subdomain identifier
          example: customer1
        company_name:
          type: string
          minLength: 1
          maxLength: 255
          description: Company name
          example: Customer Company Inc
        admin_email:
          type: string
          format: email
          description: Initial admin user email
          example: admin@customer1.com
        database_url:
          type: string
          format: uri
          description: Supabase project URL
          example: https://xxx.supabase.co
        database_credentials:
          type: object
          required:
            - anon_key
            - service_key
          properties:
            anon_key:
              type: string
              description: Supabase anonymous key
            service_key:
              type: string
              description: Supabase service role key

    UpdateTenantRequest:
      type: object
      properties:
        company_name:
          type: string
          minLength: 1
          maxLength: 255
        is_active:
          type: boolean
          description: Active/suspended status

    TenantResponse:
      type: object
      required:
        - tenant_id
        - company_name
        - subdomain
        - is_active
        - created_at
      properties:
        tenant_id:
          type: string
          format: uuid
        company_name:
          type: string
        subdomain:
          type: string
        is_active:
          type: boolean
        metadata:
          type: object
        created_at:
          type: string
          format: date-time
        updated_at:
          type: string
          format: date-time
        suspended_at:
          type: string
          format: date-time
          nullable: true

    TenantDetailResponse:
      allOf:
        - $ref: '#/components/schemas/TenantResponse'
        - type: object
          properties:
            user_count:
              type: integer
              description: Number of users in tenant
            config:
              type: object
              description: Tenant configuration

    TenantListResponse:
      type: object
      required:
        - tenants
        - total
        - limit
        - offset
      properties:
        tenants:
          type: array
          items:
            $ref: '#/components/schemas/TenantResponse'
        total:
          type: integer
        limit:
          type: integer
        offset:
          type: integer

    TenantUsersResponse:
      type: object
      properties:
        users:
          type: array
          items:
            $ref: '#/components/schemas/UserTenantResponse'

    AddTenantUserRequest:
      type: object
      required:
        - email
        - role
      properties:
        email:
          type: string
          format: email
        role:
          type: string
          enum: [member, admin, super_admin]

    UserTenantResponse:
      type: object
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        tenant_id:
          type: string
          format: uuid
        role:
          type: string
          enum: [member, admin, super_admin]
        created_at:
          type: string
          format: date-time

    Error:
      type: object
      required:
        - detail
      properties:
        detail:
          type: string

  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token with super_admin role

security:
  - BearerAuth: []

tags:
  - name: Tenant Admin
    description: Tenant provisioning and management (super admin only)
