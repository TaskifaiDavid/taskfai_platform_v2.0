# ============================================
# TaskifAI Docker Compose - Local Development
# ============================================

version: '3.9'

services:
  # ============================================
  # POSTGRES DATABASE
  # ============================================
  db:
    image: postgres:17-alpine
    container_name: taskifai-postgres
    environment:
      POSTGRES_DB: taskifai
      POSTGRES_USER: taskifai
      POSTGRES_PASSWORD: taskifai_dev_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/01-schema.sql
      - ./backend/db/seed_vendor_configs.sql:/docker-entrypoint-initdb.d/02-seed.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskifai"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskifai-network

  # ============================================
  # REDIS
  # ============================================
  redis:
    image: redis:7-alpine
    container_name: taskifai-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    command: redis-server --appendonly yes
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - taskifai-network

  # ============================================
  # BACKEND API
  # ============================================
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskifai-backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env.local  # Changed from .env to .env.local for local development
    environment:
      - DATABASE_URL=postgresql://taskifai:taskifai_dev_password@db:5432/taskifai
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
      - DEBUG=true
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - taskifai-network

  # ============================================
  # CELERY WORKER
  # ============================================
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskifai-worker
    env_file:
      - ./backend/.env.local  # Changed from .env to .env.local for local development
    environment:
      - DATABASE_URL=postgresql://taskifai:taskifai_dev_password@db:5432/taskifai
      - REDIS_URL=redis://redis:6379/0
      - ENVIRONMENT=development
    volumes:
      - ./backend:/app
      - backend_uploads:/app/uploads
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: celery -A app.workers.celery_app worker --loglevel=info
    dns:
      - 8.8.8.8
      - 8.8.4.4
    networks:
      - taskifai-network

  # ============================================
  # FRONTEND APPLICATION
  # ============================================
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    container_name: taskifai-frontend
    ports:
      - "5173:5173"
    env_file:
      - ./frontend/.env.local  # Changed from .env to .env.local for local development
    environment:
      - VITE_API_URL=http://localhost:8000
      - VITE_ENVIRONMENT=development
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev -- --host 0.0.0.0
    networks:
      - taskifai-network

# ============================================
# VOLUMES
# ============================================
volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  backend_uploads:
    driver: local

# ============================================
# NETWORKS
# ============================================
networks:
  taskifai-network:
    driver: bridge
