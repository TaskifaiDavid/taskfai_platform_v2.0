version: '3.8'

services:
  # PostgreSQL Database (for local development without Supabase)
  db:
    image: postgres:17-alpine
    container_name: bibbi-postgres
    environment:
      POSTGRES_DB: bibbi
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backend/db/schema.sql:/docker-entrypoint-initdb.d/schema.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis (for Celery message broker and caching)
  redis:
    image: redis:7-alpine
    container_name: bibbi-redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bibbi-backend
    ports:
      - "8000:8000"
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/bibbi
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - /tmp/uploads:/tmp/uploads
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload

  # Celery Worker (for background tasks)
  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: bibbi-worker
    env_file:
      - ./backend/.env
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/bibbi
      - REDIS_URL=redis://redis:6379/0
    volumes:
      - ./backend:/app
      - /tmp/uploads:/tmp/uploads
    depends_on:
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    command: celery -A app.workers.celery_app worker --loglevel=info

  # Frontend Application
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: bibbi-frontend
    ports:
      - "3000:3000"
    env_file:
      - ./frontend/.env
    environment:
      - VITE_API_URL=http://localhost:8000/api
    volumes:
      - ./frontend:/app
      - /app/node_modules
    depends_on:
      - backend
    command: npm run dev

volumes:
  postgres_data:
    driver: local
